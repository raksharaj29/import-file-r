Importing Data from CSV File
What?
CSV (Comma-Separated Values) is a plain text file format that stores tabular data in a structured way.
Why?
CSV files are widely used for storing datasets in data science, finance, machine learning, etc.
How?
Use the read.csv() function to import CSV files.
When?
When dealing with structured data like sales reports, stock market data, employee details, etc.

# Read a CSV file from your computer
data <- read.csv("C:/Users/Kong/Documents/data.csv")

# Display the first few rows
head(data)

# Create sample data
df <- data.frame(Name = c("Alice", "Bob", "Charlie"),
                 Age = c(25, 30, 35),
                 Score = c(90, 85, 88))

# Write data to CSV
write.csv(df, "output.csv", row.names = FALSE)


 Importing Data from Excel File
 What?
Excel files (.xlsx, .xls) store tabular data in multiple sheets.

Why?
Excel is used for financial reports, business analytics, and data organization.

How?
Use the readxl package to read Excel files.

When?
When working with multi-sheet data, financial statements, or survey responses.

# Install and load readxl package
install.packages("readxl")
library(readxl)

# Read an Excel file
data <- read_excel("C:/Users/Kong/Documents/data.xlsx", sheet = 1)

data <- read_excel("file.xlsx", sheet = "Sheet2")

//read all sheets
all_data <- lapply(excel_sheets("path/to/your_file.xlsx"), 
                   function(sheet) read_excel("path/to/your_file.xlsx", sheet = sheet))

print(data)      # Displays all rows in the console
View(data)       # Opens the data in a spreadsheet-like viewer (RStudio)

# Display first few rows
head(data)

# Install and load writexl package
install.packages("writexl")
library(writexl)

# Save data to an Excel file
write_xlsx(df, "output.xlsx")

Importing Data from the Web
What?
Data is often stored online in CSV, JSON, or APIs.

Why?
To fetch live data (e.g., stock prices, weather updates, real-time COVID-19 stats).

How?
Use the read.csv() function with a URL or use jsonlite for JSON data.

When?
When pulling real-time stock market, weather, or sports data.

url <- "https://people.sc.fsu.edu/~jburkardt/data/csv/airtravel.csv"
data <- read.csv(url)

# Display the first few rows
head(data)

# Install jsonlite package
install.packages("jsonlite")
library(jsonlite)

# Fetch JSON data from an API
json_data <- fromJSON("https://api.github.com/users/hadley/orgs")

# Print data
print(json_data)

Importing Data from SQL Database
What?
SQL databases (MySQL, PostgreSQL, SQLite) store structured data in tables.

Why?
Used in large-scale applications like banking, e-commerce, and healthcare.

How?
Use the RMySQL or DBI package to connect and fetch data.

When?
When working with enterprise applications, customer records, or big data.

# Install and load RMySQL
install.packages("RMySQL")
library(RMySQL)

# Connect to database
con <- dbConnect(MySQL(), user="root", password="password", dbname="company_db", host="localhost")

# Fetch data from SQL
data <- dbGetQuery(con, "SELECT * FROM employees")

# Display first few rows
head(data)

# Disconnect
dbDisconnect(con)

# Writing data to database
dbWriteTable(con, "new_table", df, row.names = FALSE, overwrite = TRUE)

Reading & Writing PDF Files
What?
PDF files store formatted documents like reports and research papers.

Why?
Used for automating document processing like invoice reading, extracting tables from PDFs, etc.

How?
Use the pdftools package to read PDFs.

When?
When extracting data from research papers, invoices, or scanned documents.

# Install and load pdftools
install.packages("pdftools")
library(pdftools)

# Read text from PDF
text <- pdf_text("C:/Users/Kong/Documents/sample.pdf")

# Print first page
print(text[1])

Reading & Writing JPEG Images
What?
JPEG files store images used in machine learning and data visualization.

Why?
Used for image processing, computer vision, and medical imaging.

How?
Use the jpeg package to read/write images.

When?
When working with image analysis, facial recognition, or object detection.

# Install and load jpeg package
install.packages("jpeg")
library(jpeg)

# Read image
img <- readJPEG("C:/Users/Kong/Pictures/image.jpg")

# Display image (using raster library)
install.packages("raster")
library(raster)
plot(as.raster(img))


# Save image after processing
writeJPEG(img, "output.jpg")

CSV & Excel → Used for tabular data (small datasets, business reports, etc.)
Web & APIs → Used for real-time data (stocks, weather, news, etc.)
Databases (SQL) → Used for enterprise-level data storage
PDF & JPEG → Used for documents, reports, and image processing
